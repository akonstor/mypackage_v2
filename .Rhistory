gs_sym
gs<-unique(unlist(kegg.gs[rownames(TMD_fil.gage$greater)[221]]))
gs_sym
gs_sym<-eg2sym(gs)
gs_sym
load("/Users/akonstor/Downloads/gdac.broadinstitute.org_OV.Merge_transcriptome__ht_hg_u133a__broad_mit_edu__Level_3__gene_rma__data.Level_3.2015082100.0.0/tcga_11_3_15.RData")
celfiles.gcrma
A=topTable(subtype_ebFit,n=100000,p.value=0.05)
A['SCL40A1',]
A['TFRC',]
A['SCD',]
A['FTL',]
A['FTH1',]
A['IRP2',]
A['ACO1',]
source("https://bioconductor.org/biocLite.R")
biocLite("spade")
library(spade)
source("http://bioconductor.org/biocLite.R")
library(spade)
biocLite("spade")
source("https://bioconductor.org/biocLite.R")
biocLite("spade")
library(spade)
source("http://bioconductor.org/biocLite.R")
biocLite("spade")
library(spade)
source("https://bioconductor.org/biocLite.R")
biocLite("spade")
library(spade)
source("https://bioconductor.org/biocLite.R")
biocLite("cytofkit")
library(destiny)
source("https://bioconductor.org/biocLite.R")
biocLite("destiny")
library(destiny)
library(nsFilter)
library(simpleaffy)
library(hgu133plus2.db)
sessionInfo()
library(simpleaffy)
source("http://bioconductor.org/biocLite.R")
biocLite(c("AnnotationDbi", "impute", "GO.db", "preprocessCore"))
install.packages("WGCNA")
age<-c(1,3,5,2,11,9,3,9,12,3)
weight<-c(4.4,5.3,7.2,5.2,8.5,7.3,6.0,10.4,10.2,6.1)
mean(weight)
sd(weight)
cor(age,weight)
plot(age,weight)
demo(graphics)
demo(image)
x<-runif(20)
x
help(runif)
summary(x)
hist(x)
lmfit<-lm(mpg~wt,data=mtcars)
summary(lmfit)
plot(lmfit)
cooks<-cooks.distance(lmfit)
plot(cook)
plot(cooks)
predict(lmfit,mynewdata)
help(lm)
help.start()
install.packages("vcd")
help(package="vcd")
library("vcd")
Arthritis
data("Arthritis")
help("data")
art<-xtabs(~Treatment+Improved, data=Arthritis, subset=Sex=="Female")
art
help(xtabs)
example(Arthritis)
help(Arthritis)
attach(mtcars)
plot(wt,mpg)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
detach(mtcars)
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)drugB <- c(15, 18, 25, 31, 40)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
plot(dose, drugA, type="b")
par()
par(no.readoutonly=TRUE)
par(no.readonly=TRUE)
opar<-par(no.readonly=TRUE)
par(lty=2, pch=17)
plot(dose, drugA, type="b")
par(opar)
plot(dose, drugA, type="b", lty=3, lwd=3, pch=15, cex=2)
rainbow(10)
help(gray)
n<-10
mycolors<-rainbow(n)
mycolors
pie(Rep(1,n),labels=mycolors,col=mycolors)
pie(rep(1,n),labels=mycolors,col=mycolors)
rep(1,n)
mygrays <- gray(0:n/n)
pie(rep(1, n), labels=mygrays, col=mygrays)
par(font.lab=3, cex.lab=1.5, font.main=4, cex.main=2)
plot(dose, drugA, type="b")
par(opar)
plot(dose, drugA, type="b")
names(pdfFonts())
par(pin=c(4,3), mai=c(1,.5, 1, .2))
plot(dose, drugA, type="b")
par(opar)
dose  <- c(20, 30, 40, 45, 60)drugA <- c(16, 20, 27, 40, 60)drugB <- c(15, 18, 25, 31, 40)opar <- par(no.readonly=TRUE)par(pin=c(2, 3))par(lwd=2, cex=1.5)par(cex.axis=.75, font.axis=3)
dose  <- c(20, 30, 40, 45, 60)drugA <- c(16, 20, 27, 40, 60)drugB <- c(15, 18, 25, 31, 40)
dose  <- c(20, 30, 40, 45, 60)drugA <- c(16, 20, 27, 40, 60)
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
par(pin=c(2, 3))
par(lwd=2, cex=1.5)
par(cex.axis=.75, font.axis=3)
plot(dose, drugA, type="b", pch=19, lty=2, col="red")
plot(dose, drugB, type="b", pch=23, lty=6, col="blue", bg="green")
par(opar)
dose  <- c(20, 30, 40, 45, 60)drugA <- c(16, 20, 27, 40, 60)drugB <- c(15, 18, 25, 31, 40)opar <- par(no.readonly=TRUE)par(pin=c(2, 3))par(lwd=2, cex=1.5)par(cex.axis=.75, font.axis=3)plot(dose, drugA, type="b", pch=19, lty=2, col="red")
opar <- par(no.readonly=TRUE)par(pin=c(2, 3))par(lwd=2, cex=1.5)par(cex.axis=.75, font.axis=3)plot(dose, drugA, type="b", pch=19, lty=2, col="red")
par(pin=c(2, 3))par(lwd=2, cex=1.5)par(cex.axis=.75, font.axis=3)
par(pin=c(2, 3))
par(lwd=2, cex=1.5)
par(cex.axis=.75, font.axis=3)
dev.new()
plot(dose, drugA, type="b", pch=19, lty=2, col="red")
dev.new()
plot(dose, drugB, type="b", pch=23, lty=6, col="blue", bg="green")
dev.off()
plot(dose, drugA, type="b",     col="red", lty=2, pch=2, lwd=2,     main="Clinical Trials for Drug A",     sub="This is hypothetical data",     xlab="Dosage", ylab="Drug Response",     xlim=c(0, 60), ylim=c(0, 70))
plot(dose, drugA, type="b",     col="red", lty=2, pch=2, lwd=2,     main="Clinical Trials for Drug A",     sub="This is hypothetical data",     xlab="Dosage", ylab="Drug Response",     xlim=c(0, 60), ylim=c(0, 70))
plot(dose, drugA, type="b",
col="red", lty=2, pch=2, lwd=2,
main="Clinical Trials for Drug A",
sub="This is hypothetical data",
xlab="Dosage", ylab="Drug Response",
xlim=c(0, 60), ylim=c(0, 70))
par(opar)
plot(dose, drugA, type="b",
col="red", lty=2, pch=2, lwd=2,
main="Clinical Trials for Drug A",
sub="This is hypothetical data",
xlab="Dosage", ylab="Drug Response",
xlim=c(0, 60), ylim=c(0, 70))
dose  <- c(20, 30, 40, 45, 60)drugA <- c(16, 20, 27, 40, 60)drugB <- c(15, 18, 25, 31, 40)
dose  <- c(20, 30, 40, 45, 60)drugA <- c(16, 20, 27, 40, 60)drugB <- c(15, 18, 25, 31, 40)
dose  <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
par(lwd=2, cex=1.5, font.lab=2)
plot(dose, drugA, type="b",    pch=15, lty=1, col="red", ylim=c(0, 60),    main="Drug A vs. Drug B",    xlab="Drug Dosage", ylab="Drug Response")
plot(dose, drugA, type="b",...    pch=15, lty=1, col="red", ylim=c(0, 60),...    main="Drug A vs. Drug B",...    xlab="Drug Dosage", ylab="Drug Response")
plot(dose, drugA, type="b",     pch=15, lty=1, col="red", ylim=c(0, 60),     main="Drug A vs. Drug B",     xlab="Drug Dosage", ylab="Drug Response")
plot(dose, drugA, type="b",    pch=15, lty=1, col="red", ylim=c(0, 60),    main="Drug A vs. Drug B",    xlab="Drug Dosage", ylab="Drug Response")
plot(dose, drugA, type="b", pch=15, lty=1, col="red", ylim=c(0, 60), main="Drug A vs. Drug B", xlab="Drug Dosage", ylab="Drug Response")
par(opar)
plot(dose, drugA, type="b", pch=15, lty=1, col="red", ylim=c(0, 60), main="Drug A vs. Drug B", xlab="Drug Dosage", ylab="Drug Response")
lines(dose, drugB, type="b", pch=17, lty=2, col="blue")
abline(h=c(30), lwd=1.5, lty=2, col="gray")
library(Hmisc)
minor.tick(nx=3, ny=3, tick.ratio=0.5)
legend("topleft", inset=.05, title="Drug Type", c("A","B"), lty=c(1, 2), pch=c(15, 17), col=c("red", "blue"))
par(opar)
demo(plotmath)
attach(mtcars)
par(mfrow=c(2,2))
plot(wt,mpg, main="Scatterplot of wt vs. mpg")
par(opar)
par(mfrow=c(2,2))
dev.on()
dev.on
dev()
dev.new()
par(mfrow=c(2,2))
plot(wt,mpg, main="Scatterplot of wt vs. mpg")
plot(wt,disp, main="Scatterplot of wt vs disp")
ist(wt, main="Histogram of wt")
hist(wt, main="Histogram of wt")
boxplot(wt, main="Boxplot of wt")
par(opar)
detach(mtcars)
attach(mtcars)
dev.off()
dev.on()
def.new()
dev.new
dev.new()
par(mfrow=c(3,1))
hist(wt)
hist(mpg)
hist(disp)
dev.off()
dev.new()
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
hist(wt)
hist(mpg)
hist(disp)
dev.off()
dev.new()
layout(matrix(c(1, 1, 2, 3), 2, 2, byrow = TRUE),       widths=c(3, 1), heights=c(1, 2))
layout(matrix(c(1, 1, 2, 3), 2, 2, byrow = TRUE), widths=c(3, 1), heights=c(1, 2))
hist(wt)
hist(mpg)
hist(disp)
par(fig=c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab="Miles Per Gallon", ylab="Car Weight")
dev.off()
par(opar)
par(fig=c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab="Miles Per Gallon", ylab="Car Weight")
par(fig=c(0, 0.8, 0.55, 1), new=TRUE)
boxplot(mtcars$wt, horizontal=TRUE, axes=FALSE)
par(fig=c(0.65, 1, 0, 0.8), new=TRUE)
boxplot(mtcars$mpg, axes=FALSE)
par(fig=c(0, 0.8, 0.55, 1), new=TRUE)
boxplot(mtcars$wt, horizontal=TRUE, axes=FALSE)
help(par)
par(fig=c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab="Miles Per Gallon", ylab="Car Weight")
par(fig=c(0, 0.8, 0.8, 1), new=TRUE)
boxplot(mtcars$wt, horizontal=TRUE, axes=FALSE)
dev.new()
par(fig=c(0, 0.8, 0, 0.8))
plot(mtcars$wt, mtcars$mpg, xlab="Miles Per Gallon", ylab="Car Weight")
par(fig=c(0, 0.8, 0.8, 1), new=TRUE)
boxplot(mtcars$wt, horizontal=TRUE, axes=FALSE)
par(fig=c(0, 0.8, 0.55, 1), new=TRUE)
boxplot(mtcars$wt, horizontal=TRUE, axes=FALSE)
par(fig=c(0.65, 1, 0, 0.8), new=TRUE)
boxplot(mtcars$mpg, axes=FALSE)
mtext("Enhanced Scatterplot", side=3, outer=TRUE, line=-3)
mydates<-as.date(c("2007-06-22", "2004-02-13"))
mydates<-as.Date(c("2007-06-22", "2004-02-13"))
mydates
strDates<-c("2007-06-22", "2004-02-13")
dates<-as.Date(strDates, "%m/%d/%Y")
dates
strDates<-c("01/05/1965", "08/16/1975")
strDates
dates<-as.Date(strDates, "%m/%d/%Y")
dates
myformat<-"%m/%d/%y"
myformat
leadership<-read.table("leadership.csv",sep=',',row.names=1,header=TRUE)
leadership
leadership<-read.table("leadership.csv",sep=',',header=TRUE)
leadership
leadership<-read.table("leadership.csv",sep=',',row.names=1,header=TRUE)
leadership
names(leadership)[end]<-agecat
names(leadership)[end]<-"agecat"
names(leadership)[11]<-"agecat"
leadership
leadership$testDate<-as.Date(leadership$date,myformat)
leadership$testDate<-as.Date(leadership$testDate,myformat)
leadership
help(as.Date)
Sys.Date()
date()
today<-Sys.Date()
format(today, format = "%B %d %Y")
dob<-as.Date("1956-10-12")
difftime(today, dob, units = "days")
format(dob, format="%A")
dob<-as.Date("1983-7-9")
dob
format(dob, format="%A")
a<-c(1,2,3)
a
is.numeric(a)
is.vector(a)
a<-as.character(a)
a
is.numeric(a)
is.vector(a)
is.character(a)
newdata<-leadership[order(leadership$age),]
newdata
attach(leadership)
newdata<-leadership[order(gender,age),]
detach(leadership)
newdata
attach(leadership)
newdata<-leadership[order(gender,-age),]
detach(leadership)
leadership
help(merge)
## use character columns of names to get sensible sort order
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
authors
books
m1 <- merge(authors, books, by.x = "surname", by.y = "name")
m1
m2 <- merge(books, authors, by.x = "name", by.y = "surname")
m2
library(som)
install.packages("som", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(som)
data(yeast)
head(yeast)
yeast <- yeast[, -c(1, 11)]
head(yeast)
yeast.f <- filtering(yeast)
head(yeast.f)
yeast.f.n <- normalize(yeast.f)
head(yeast.f.n)
foo <- som(yeast.f.n, xdim=5, ydim=6)
plot(foo)
summary(foo)
foo
names(foo)
head(foo$data)
names(foo)
head(foo$code)
names(foo)
head(foo$visual)
install.packages("kohonen", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(kohonen)
data(wines)
set.seed(7)
training <- sample(nrow(wines), 120)
head(wines)
head(training)
help(sample)
help(scale)
Xtraining <- scale(wines[training, ])
head(Xtraining)
Xtest <- scale(wines[-training, ],center = attr(Xtraining, "scaled:center"),scale = attr(Xtraining, "scaled:scale"))
Xtest <- scale(wines[-training, ],
center = attr(Xtraining, "scaled:center"),
scale = attr(Xtraining, "scaled:scale"))
som.wines <- som(Xtraining, grid = somgrid(5, 5, "hexagonal"))
summary(som.wines)
plot(som.wines)
head(wines)
plot(som.wines,type="codes")
plot(som.wines,type="codes")
plot(som.wines,type="changes")
plot(som.wines,type="counts")
plot(som.wines,type="dist.neighbours")
plot(som.wines,type="mapping")
plot(som.wines,type="property")
plot(som.wines,type="quality")
plot(som.wines,type="counts")
names(som.wines)
head(som.wines$unit.classif)
head(som.wines$data)
tail(some.wines$data)
tail(som.wines$data)
tail(som.wines$codes)
head(som.wines$unit.classif)
som.wines$unit.classif
head(som.wines$distances)
head(som.wines$changes)
som.wines$changes
tail(som.wines$codes)
tail(som.wines$grid)
names(som.wines$grid)
som.wines$grid
Student <- c("John Davis","Angela Williams","Bullwinkle Moose",
"David Jones","Janice Markhammer",
"Cheryl Cushing","Reuven Ytzrhak",
"Greg Knox","Joel England","Mary Rayburn")
math <- c(502, 600, 412, 358, 495, 512, 410, 625, 573, 522)
science <- c(95, 99, 80, 82, 75, 85, 80, 95, 89, 86)
english <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18)
roster <- data.frame(Student, math, science, english,
stringsAsFactors=FALSE)
Student <- c("John Davis","Angela Williams","Bullwinkle Moose",
"David Jones","Janice Markhammer",
"Cheryl Cushing","Reuven Ytzrhak",
"Greg Knox","Joel England","Mary Rayburn")
math <- c(502, 600, 412, 358, 495, 512, 410, 625, 573, 522)
science <- c(95, 99, 80, 82, 75, 85, 80, 95, 89, 86)
english <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18)
roster <- data.frame(Student, math, science, english,
stringsAsFactors=FALSE)
roster
x<-pretty(c(-3,3),30)
help(pretty)
help(dnorm)
y<-dnorm(x)
plot(x,y, type = "l", xlab = "Normal Deviate", ylab= "Density", yaxs = "i")
help(runif)
mydata<-matrix(rnorm(30),nrow=6)
apply(mydata,1,mean)
apply(mydata,2,mean)
options(digits=2)
help(options)
apply(mydata,1,mean)
z<-scale(roster[,2:4])
z
help(scale)
score<-apply(z,1,mean)
score
roster<-cbind(roster,score)
roster
y<-quantile(score, c(0.8,0.6,0.4,0.2))
y
roster$grade[score>=y[1]]<-"A"
roster$grade[score < y[1] & score >= y[2]] <- "B"
y <- quantile(score, c(.8,.6,.4,.2))
roster$grade[score >= y[1]] <- "A"
roster$grade[score < y[1] & score >= y[2]] <- "B"
roster$grade[score < y[2] & score >= y[3]] <- "C"
roster$grade[score < y[3] & score >= y[4]] <- "D"
roster$grade[score < y[4]] <- "F"
roster
name<-strsplit((roster$Student), " ")
name
Lastname<-sapply(name, "[",2)
Lastname
name
A = [1 2; 3 4; 5 6];
A = [1 2; 3 4; 5 6];
A  = [1 2]
x<-c(1,3,2,5)
x
y = c(1,4,3)
x = c(1,6,2)
x+y
ls()
rm(x,y,celfiles.qc)
rm(list = ls())
?matrix()
x = matrix ( data = c(1,2,3,4), nrow=2, ncol=2)
x
x = rnorm(50)
x
y = x+ rnorm(50, mean =50, sd=0.1)
y
cor(x,y)
set.seed(1303)
rnorm(50)
x = seq(-pi, pi, length = 50)
y = x
f = outer(x,y,function(x,y)cos(y)/(1+x^2))
?outer()
contour(x,y,f)
install.packages("sda", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("sda")
data(singh2002)
hist(singh2002$x)
dim(singh2002)
dim(singh2002$x)
class(singh2002)
names(singh2002)
dim(singh2002$y)
head(singh2002)
rm(list=ls)
rm(list=ls())
setwd("~/Downloads/my-functions-2")
devtools::create(path = "mypackage", rstudio = FALSE)
setwd("mypackage")
x <- state.abb
X
x
x <- x[order(state.center$x)]
x
n <- length(x)
i <- which(x == "CT")
n
i
ord <- c(i:n, (i-1):1)
ord
xx <- x[ord]
xx
wkdir
wkdir()
setwd("mypackage")
pwd
setwd("~/Downloads/my-functions-2/mypackage")
setwd("~/Downloads/my-functions-2/mypackage")
devtools::check()
devtools::load_all()
x
sort_rightleft(x = x, i=4)
sort_rightleft(x, i=4)
devtools::install_github("akonstor/mypackage")
library(mypackage)
?mypackage
help(mypackage)
?rightleftorder
sortrightleft(x=1:10,i=5)
sort_rightleft(x=1:10,i=5)
?sort_rightleft
sort_rightleft(x=1:10,i=5)
sort_rightleft(x,i)
library(mypackage)
sort_rightleft(x=1:10,i=5)
sort_rightleft
